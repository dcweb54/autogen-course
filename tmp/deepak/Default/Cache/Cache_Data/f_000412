<!doctype html>
<html
	lang="en"
	style="
		margin: 0;
		padding: 0;
		min-height: 100%;
		display: flex;
		flex-direction: column;
	"
>
	<head>
		<meta charset="utf-8" />
		<meta
			name="viewport"
			content="width=device-width, initial-scale=1, shrink-to-fit=no"
		/>
		<meta property="og:title" content="Gradio" />
		<meta property="og:type" content="website" />
		<meta property="og:url" content="{url}" />
		<meta property="og:description" content="Click to try out the app!" />
		<meta
			property="og:image"
			content="https://raw.githubusercontent.com/gradio-app/gradio/main/js/_website/src/lib/assets/img/header-image.jpg"
		/>
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:creator" content="@Gradio" />
		<meta name="twitter:title" content="Gradio" />
		<meta name="twitter:description" content="Click to try out the app!" />
		<meta
			name="twitter:image"
			content="https://raw.githubusercontent.com/gradio-app/gradio/main/js/_website/src/lib/assets/img/header-image.jpg"
		/>

		<style>
			:root {
				--bg: white;
				--col:   #27272a;
				--bg-dark: #0f0f11;
				--col-dark: #f4f4f5;
			}


			body {
				background: var(--bg);
				color: var(--col);
				font-family: Arial, Helvetica, sans-serif;
			}

			@media (prefers-color-scheme: dark) {
				body {
					background: var(--bg-dark);
					color: var(--col-dark);
				}
			}
		</style>

		<meta property="og:url" content="https://gradio.app/" />
		<meta property="og:type" content="website" />
		<meta property="og:image" content="" />
		<meta property="og:title" content="Gradio" />
		<meta
			property="og:description"
			content=""
		/>
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:creator" content="@teamGradio" />
		<meta name="twitter:title" content="Gradio" />
		<meta
			name="twitter:description"
			content=""
		/>
		<meta name="twitter:image" content="" />

		<script data-gradio-mode>
			window.__gradio_mode__ = "app";
			window.iFrameResizer = {
				heightCalculationMethod: "taggedElement"
			};
			window.parent?.postMessage(
				{ type: "SET_SCROLLING", enabled: false },
				"*"
			);
		</script>

		<script>window.gradio_config = {"version":"5.44.1","api_prefix":"/gradio_api","mode":"blocks","app_id":2569312168497024654,"dev_mode":false,"vibe_mode":false,"analytics_enabled":true,"components":[{"id":1,"type":"markdown","props":{"value":"# Chatterbox Multilingual Demo\nGenerate high-quality multilingual speech from text with reference audio styling, supporting 23 languages.","show_label":false,"rtl":false,"latex_delimiters":[{"left":"$$","right":"$$","display":true}],"visible":true,"elem_classes":[],"preserved_by_key":["value"],"sanitize_html":true,"line_breaks":false,"header_links":false,"show_copy_button":false,"container":false,"padding":false,"name":"markdown","_selectable":false},"skip_api":false,"component_class_id":"543eb5f8dcfca947ba66ab196db059c79cdca82621b183bfcd8bbe4afebcd005","key":null,"api_info":{"type":"string"},"api_info_as_input":{"type":"string"},"api_info_as_output":{"type":"string"},"example_inputs":"# Hello!"},{"id":2,"type":"markdown","props":{"value":"### üåç Supported Languages (23 total)\n**Arabic** (`ar`) ‚Ä¢ **Danish** (`da`) ‚Ä¢ **German** (`de`) ‚Ä¢ **Greek** (`el`) ‚Ä¢ **English** (`en`) ‚Ä¢ **Spanish** (`es`) ‚Ä¢ **Finnish** (`fi`) ‚Ä¢ **French** (`fr`) ‚Ä¢ **Hebrew** (`he`) ‚Ä¢ **Hindi** (`hi`) ‚Ä¢ **Italian** (`it`)\n\n**Japanese** (`ja`) ‚Ä¢ **Korean** (`ko`) ‚Ä¢ **Malay** (`ms`) ‚Ä¢ **Dutch** (`nl`) ‚Ä¢ **Norwegian** (`no`) ‚Ä¢ **Polish** (`pl`) ‚Ä¢ **Portuguese** (`pt`) ‚Ä¢ **Russian** (`ru`) ‚Ä¢ **Swedish** (`sv`) ‚Ä¢ **Swahili** (`sw`) ‚Ä¢ **Turkish** (`tr`) ‚Ä¢ **Chinese** (`zh`)","show_label":false,"rtl":false,"latex_delimiters":[{"left":"$$","right":"$$","display":true}],"visible":true,"elem_classes":[],"preserved_by_key":["value"],"sanitize_html":true,"line_breaks":false,"header_links":false,"show_copy_button":false,"container":false,"padding":false,"name":"markdown","_selectable":false},"skip_api":false,"component_class_id":"543eb5f8dcfca947ba66ab196db059c79cdca82621b183bfcd8bbe4afebcd005","key":null,"api_info":{"type":"string"},"api_info_as_input":{"type":"string"},"api_info_as_output":{"type":"string"},"example_inputs":"# Hello!"},{"id":3,"type":"row","props":{"variant":"default","visible":true,"equal_height":false,"show_progress":false,"preserved_by_key":[],"name":"row"},"skip_api":true,"component_class_id":"d31af921ae188765327079cfc062d57afc3fd6f1774765ed869512a94f7c5c22","key":null},{"id":4,"type":"column","props":{"scale":1,"min_width":320,"variant":"default","visible":true,"show_progress":false,"preserved_by_key":[],"name":"column"},"skip_api":true,"component_class_id":"d32cc8b06253a743628a25220fc5e2a82556f3b9f3a8810ac82cd17bb190798c","key":null},{"id":5,"type":"textbox","props":{"value":"Le mois dernier, nous avons atteint un nouveau jalon avec deux milliards de vues sur notre cha√Æne YouTube.","type":"text","lines":1,"max_lines":10,"label":"Text to synthesize (no character limit)","show_label":true,"container":true,"min_width":160,"visible":true,"autofocus":false,"autoscroll":true,"elem_classes":[],"preserved_by_key":["value"],"rtl":false,"show_copy_button":false,"submit_btn":false,"stop_btn":false,"name":"textbox","_selectable":false},"skip_api":false,"component_class_id":"9662103783aaa2c9d411262219a021534ef712eba183b6b1911957c1aa61468e","key":null,"api_info":{"type":"string"},"api_info_as_input":{"type":"string"},"api_info_as_output":{"type":"string"},"example_inputs":"Hello!!"},{"id":6,"type":"dropdown","props":{"choices":[["ar","ar"],["da","da"],["de","de"],["el","el"],["en","en"],["es","es"],["fi","fi"],["fr","fr"],["he","he"],["hi","hi"],["it","it"],["ja","ja"],["ko","ko"],["ms","ms"],["nl","nl"],["no","no"],["pl","pl"],["pt","pt"],["ru","ru"],["sv","sv"],["sw","sw"],["tr","tr"],["zh","zh"]],"value":"fr","type":"value","allow_custom_value":false,"filterable":true,"label":"Language","show_label":true,"container":true,"min_width":160,"visible":true,"elem_classes":[],"preserved_by_key":["value"],"name":"dropdown","_selectable":false},"skip_api":false,"component_class_id":"00d716ccc02b6ee02e757c45a9d0d54672fddf8ba5dc848b6368bc0cfa11160e","key":null,"api_info":{"type":"string","enum":["ar","da","de","el","en","es","fi","fr","he","hi","it","ja","ko","ms","nl","no","pl","pt","ru","sv","sw","tr","zh"]},"api_info_as_input":{"type":"string","enum":["ar","da","de","el","en","es","fi","fr","he","hi","it","ja","ko","ms","nl","no","pl","pt","ru","sv","sw","tr","zh"]},"api_info_as_output":{"type":"string","enum":["ar","da","de","el","en","es","fi","fr","he","hi","it","ja","ko","ms","nl","no","pl","pt","ru","sv","sw","tr","zh"]},"example_inputs":"ar"},{"id":7,"type":"audio","props":{"streamable":false,"value":{"path":"/tmp/gradio/d90d9c90fe3c912a116c78ff661580fc223150978a9a0b4cbb98f94ab19e663b/fr_f1.flac","url":"https://c730f59f7737bcbef9.gradio.live/gradio_api/file=/tmp/gradio/d90d9c90fe3c912a116c78ff661580fc223150978a9a0b4cbb98f94ab19e663b/fr_f1.flac","size":null,"orig_name":null,"mime_type":null,"is_stream":false,"meta":{"_type":"gradio.FileData"}},"sources":["upload","microphone"],"type":"filepath","label":"Reference Audio File (Optional)","show_label":true,"container":true,"min_width":160,"visible":true,"streaming":false,"elem_classes":[],"preserved_by_key":["value"],"autoplay":false,"show_share_button":false,"editable":true,"waveform_options":{"waveform_color":null,"waveform_progress_color":null,"trim_region_color":null,"show_recording_waveform":true,"show_controls":false,"skip_length":5,"sample_rate":44100},"loop":false,"recording":false,"name":"audio","_selectable":false},"skip_api":false,"component_class_id":"f7b339cae0b2f115d83bc25e708e7eb1c8620d3cd0c988ca9d49713ff962c758","key":null,"api_info":{"$defs":{"FileDataMeta":{"properties":{"_type":{"const":"gradio.FileData","title":"Type","type":"string"}},"required":["_type"],"title":"FileDataMeta","type":"object"}},"properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"$ref":"#/$defs/FileDataMeta"}},"required":["path"],"title":"FileData","type":"object","additional_description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"api_info_as_input":{"$defs":{"FileDataMeta":{"properties":{"_type":{"const":"gradio.FileData","title":"Type","type":"string"}},"required":["_type"],"title":"FileDataMeta","type":"object"}},"properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"$ref":"#/$defs/FileDataMeta"}},"required":["path"],"title":"FileData","type":"object","additional_description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"api_info_as_output":{"$defs":{"FileDataMeta":{"properties":{"_type":{"const":"gradio.FileData","title":"Type","type":"string"}},"required":["_type"],"title":"FileDataMeta","type":"object"}},"properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"$ref":"#/$defs/FileDataMeta"}},"required":["path"],"title":"FileData","type":"object","additional_description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"example_inputs":{"path":"https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav","meta":{"_type":"gradio.FileData"},"orig_name":"audio_sample.wav","url":"https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav"}},{"id":8,"type":"slider","props":{"minimum":0.25,"maximum":2,"value":0.5,"step":0.05,"label":"Exaggeration","show_label":true,"container":true,"min_width":160,"visible":true,"elem_classes":[],"preserved_by_key":["value"],"show_reset_button":true,"name":"slider","_selectable":false},"skip_api":false,"component_class_id":"172682b921315b27242c0ec45cfb84074eab7cfaedda66e4030fcaf3c076eb4e","key":null,"api_info":{"type":"number","description":"numeric value between 0.25 and 2"},"api_info_as_input":{"type":"number","description":"numeric value between 0.25 and 2"},"api_info_as_output":{"type":"number","description":"numeric value between 0.25 and 2"},"example_inputs":0.25},{"id":9,"type":"slider","props":{"minimum":0.2,"maximum":1,"value":0.5,"step":0.05,"label":"CFG/Pace","show_label":true,"container":true,"min_width":160,"visible":true,"elem_classes":[],"preserved_by_key":["value"],"show_reset_button":true,"name":"slider","_selectable":false},"skip_api":false,"component_class_id":"172682b921315b27242c0ec45cfb84074eab7cfaedda66e4030fcaf3c076eb4e","key":null,"api_info":{"type":"number","description":"numeric value between 0.2 and 1"},"api_info_as_input":{"type":"number","description":"numeric value between 0.2 and 1"},"api_info_as_output":{"type":"number","description":"numeric value between 0.2 and 1"},"example_inputs":0.2},{"id":10,"type":"accordion","props":{"label":"More options","open":false,"visible":true,"preserved_by_key":[],"name":"accordion"},"skip_api":true,"component_class_id":"64b2437c4bbb87e4b752bf099a7f6b88d398e7df1848734ac7736c8d3c7872d9","key":null},{"id":11,"type":"number","props":{"value":0,"label":"Random seed (0 for random)","show_label":true,"container":true,"min_width":160,"visible":true,"elem_classes":[],"preserved_by_key":["value"],"step":1,"name":"number","_selectable":false},"skip_api":false,"component_class_id":"cafd1beb1f5138711bc981498ad70eed95dabbc40341794bc01831c4ec025943","key":null,"api_info":{"type":"number"},"api_info_as_input":{"type":"number"},"api_info_as_output":{"type":"number"},"example_inputs":3},{"id":12,"type":"slider","props":{"minimum":0.05,"maximum":5,"value":0.8,"step":0.05,"label":"Temperature","show_label":true,"container":true,"min_width":160,"visible":true,"elem_classes":[],"preserved_by_key":["value"],"show_reset_button":true,"name":"slider","_selectable":false},"skip_api":false,"component_class_id":"172682b921315b27242c0ec45cfb84074eab7cfaedda66e4030fcaf3c076eb4e","key":null,"api_info":{"type":"number","description":"numeric value between 0.05 and 5"},"api_info_as_input":{"type":"number","description":"numeric value between 0.05 and 5"},"api_info_as_output":{"type":"number","description":"numeric value between 0.05 and 5"},"example_inputs":0.05},{"id":13,"type":"form","props":{"scale":0,"min_width":0,"preserved_by_key":[],"name":"form"},"skip_api":true,"component_class_id":"40d4832c92b433558cfc7a2a218841dc7dec54c8c9f9470aa3fca95c935b8614","key":null},{"id":14,"type":"button","props":{"value":"Generate","variant":"primary","size":"lg","visible":true,"interactive":true,"elem_classes":[],"preserved_by_key":["value"],"name":"button","_selectable":false},"skip_api":true,"component_class_id":"d94e42bc0de64d88926a97585021956fe523296790198ad29a92dcb81a90b02d","key":null},{"id":15,"type":"form","props":{"scale":0,"min_width":0,"preserved_by_key":[],"name":"form"},"skip_api":true,"component_class_id":"40d4832c92b433558cfc7a2a218841dc7dec54c8c9f9470aa3fca95c935b8614","key":null},{"id":16,"type":"form","props":{"scale":0,"min_width":0,"preserved_by_key":[],"name":"form"},"skip_api":true,"component_class_id":"40d4832c92b433558cfc7a2a218841dc7dec54c8c9f9470aa3fca95c935b8614","key":null},{"id":17,"type":"column","props":{"scale":1,"min_width":320,"variant":"default","visible":true,"show_progress":false,"preserved_by_key":[],"name":"column"},"skip_api":true,"component_class_id":"d32cc8b06253a743628a25220fc5e2a82556f3b9f3a8810ac82cd17bb190798c","key":null},{"id":18,"type":"audio","props":{"streamable":false,"sources":["upload","microphone"],"type":"numpy","label":"Output Audio","show_label":true,"container":true,"min_width":160,"visible":true,"streaming":false,"elem_classes":[],"preserved_by_key":["value"],"autoplay":false,"show_share_button":false,"editable":true,"waveform_options":{"waveform_color":null,"waveform_progress_color":null,"trim_region_color":null,"show_recording_waveform":true,"show_controls":false,"skip_length":5,"sample_rate":44100},"loop":false,"recording":false,"name":"audio","_selectable":false},"skip_api":false,"component_class_id":"f7b339cae0b2f115d83bc25e708e7eb1c8620d3cd0c988ca9d49713ff962c758","key":null,"api_info":{"$defs":{"FileDataMeta":{"properties":{"_type":{"const":"gradio.FileData","title":"Type","type":"string"}},"required":["_type"],"title":"FileDataMeta","type":"object"}},"properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"$ref":"#/$defs/FileDataMeta"}},"required":["path"],"title":"FileData","type":"object","additional_description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"api_info_as_input":{"$defs":{"FileDataMeta":{"properties":{"_type":{"const":"gradio.FileData","title":"Type","type":"string"}},"required":["_type"],"title":"FileDataMeta","type":"object"}},"properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"$ref":"#/$defs/FileDataMeta"}},"required":["path"],"title":"FileData","type":"object","additional_description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"api_info_as_output":{"$defs":{"FileDataMeta":{"properties":{"_type":{"const":"gradio.FileData","title":"Type","type":"string"}},"required":["_type"],"title":"FileDataMeta","type":"object"}},"properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"$ref":"#/$defs/FileDataMeta"}},"required":["path"],"title":"FileData","type":"object","additional_description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"example_inputs":{"path":"https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav","meta":{"_type":"gradio.FileData"},"orig_name":"audio_sample.wav","url":"https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav"}}],"css":"","connect_heartbeat":false,"js":"","head":"","title":"Gradio","space_id":null,"enable_queue":true,"show_error":false,"show_api":true,"is_colab":false,"max_file_size":null,"stylesheets":["https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400;600\u0026display=swap"],"theme":"default","protocol":"sse_v3","body_css":{"body_background_fill":"white","body_text_color":"#27272a","body_background_fill_dark":"#0f0f11","body_text_color_dark":"#f4f4f5"},"fill_height":false,"fill_width":false,"theme_hash":"dcc5ba6daa59190cd89158b9dcd638cb327c8d2793466af78361ece68e126118","pwa":false,"pages":[["","Home"]],"page":{"":{"layout":{"id":0,"children":[{"id":1},{"id":2},{"id":3,"children":[{"id":4,"children":[{"id":15,"children":[{"id":5},{"id":6}]},{"id":7},{"id":16,"children":[{"id":8},{"id":9}]},{"id":10,"children":[{"id":13,"children":[{"id":11},{"id":12}]}]},{"id":14}]},{"id":17,"children":[{"id":18}]}]}]},"components":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"dependencies":[0,1]}},"mcp_server":false,"i18n_translations":null,"dependencies":[{"id":0,"targets":[[6,"change"]],"inputs":[6,7,5],"outputs":[7,5],"backend_fn":true,"js":null,"queue":true,"api_name":"on_language_change","api_description":null,"scroll_to_output":false,"show_progress":"hidden","show_progress_on":null,"batch":false,"max_batch_size":4,"cancels":[],"types":{"generator":false,"cancel":false},"collects_event_data":false,"trigger_after":null,"trigger_only_on_success":false,"trigger_only_on_failure":false,"trigger_mode":"always_last","show_api":true,"rendered_in":null,"render_id":null,"connection":"sse","time_limit":null,"stream_every":0.5,"like_user_message":false,"event_specific_args":null,"js_implementation":null},{"id":1,"targets":[[14,"click"]],"inputs":[5,6,7,8,12,11,9],"outputs":[18],"backend_fn":true,"js":null,"queue":true,"api_name":"generate_tts_audio","api_description":null,"scroll_to_output":false,"show_progress":"full","show_progress_on":null,"batch":false,"max_batch_size":4,"cancels":[],"types":{"generator":false,"cancel":false},"collects_event_data":false,"trigger_after":null,"trigger_only_on_success":false,"trigger_only_on_failure":false,"trigger_mode":"once","show_api":true,"rendered_in":null,"render_id":null,"connection":"sse","time_limit":null,"stream_every":0.5,"like_user_message":false,"event_specific_args":null,"js_implementation":null}],"layout":{"id":0,"children":[{"id":1},{"id":2},{"id":3,"children":[{"id":4,"children":[{"id":15,"children":[{"id":5},{"id":6}]},{"id":7},{"id":16,"children":[{"id":8},{"id":9}]},{"id":10,"children":[{"id":13,"children":[{"id":11},{"id":12}]}]},{"id":14}]},{"id":17,"children":[{"id":18}]}]}]},"username":null,"deep_link_state":"none","current_page":"","root":"https://c730f59f7737bcbef9.gradio.live"};</script><script>window.gradio_api_info = {"named_endpoints":{"/on_language_change":{"parameters":[{"label":"Language","parameter_name":"lang","parameter_has_default":true,"parameter_default":"fr","type":{"type":"string","enum":["ar","da","de","el","en","es","fi","fr","he","hi","it","ja","ko","ms","nl","no","pl","pt","ru","sv","sw","tr","zh"]},"python_type":{"type":"Literal[\u0027ar\u0027, \u0027da\u0027, \u0027de\u0027, \u0027el\u0027, \u0027en\u0027, \u0027es\u0027, \u0027fi\u0027, \u0027fr\u0027, \u0027he\u0027, \u0027hi\u0027, \u0027it\u0027, \u0027ja\u0027, \u0027ko\u0027, \u0027ms\u0027, \u0027nl\u0027, \u0027no\u0027, \u0027pl\u0027, \u0027pt\u0027, \u0027ru\u0027, \u0027sv\u0027, \u0027sw\u0027, \u0027tr\u0027, \u0027zh\u0027]","description":""},"component":"Dropdown","example_input":"ar"},{"label":"Reference Audio File (Optional)","parameter_name":"current_ref","parameter_has_default":true,"parameter_default":{"path":"/tmp/gradio/d90d9c90fe3c912a116c78ff661580fc223150978a9a0b4cbb98f94ab19e663b/fr_f1.flac","url":"https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav","size":null,"orig_name":null,"mime_type":null,"is_stream":false,"meta":{"_type":"gradio.FileData"}},"type":{"$defs":{"FileDataMeta":{"properties":{"_type":{"const":"gradio.FileData","title":"Type","type":"string"}},"required":["_type"],"title":"FileDataMeta","type":"object"}},"properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"$ref":"#/$defs/FileDataMeta"}},"required":["path"],"title":"FileData","type":"object","additional_description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"python_type":{"type":"filepath","description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"component":"Audio","example_input":{"path":"https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav","meta":{"_type":"gradio.FileData"},"orig_name":"audio_sample.wav","url":"https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav"}},{"label":"Text to synthesize (no character limit)","parameter_name":"current_text","parameter_has_default":true,"parameter_default":"Le mois dernier, nous avons atteint un nouveau jalon avec deux milliards de vues sur notre cha√Æne YouTube.","type":{"type":"string"},"python_type":{"type":"str","description":""},"component":"Textbox","example_input":"Hello!!"}],"returns":[{"label":"Reference Audio File (Optional)","type":{"$defs":{"FileDataMeta":{"properties":{"_type":{"const":"gradio.FileData","title":"Type","type":"string"}},"required":["_type"],"title":"FileDataMeta","type":"object"}},"properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"$ref":"#/$defs/FileDataMeta"}},"required":["path"],"title":"FileData","type":"object","additional_description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"python_type":{"type":"filepath","description":""},"component":"Audio"},{"label":"Text to synthesize (no character limit)","type":{"type":"string"},"python_type":{"type":"str","description":""},"component":"Textbox"}],"show_api":true,"description":""},"/generate_tts_audio":{"parameters":[{"label":"Text to synthesize (no character limit)","parameter_name":"text_input","parameter_has_default":true,"parameter_default":"Le mois dernier, nous avons atteint un nouveau jalon avec deux milliards de vues sur notre cha√Æne YouTube.","type":{"type":"string"},"python_type":{"type":"str","description":""},"component":"Textbox","example_input":"Hello!!"},{"label":"Language","parameter_name":"language_id","parameter_has_default":true,"parameter_default":"fr","type":{"type":"string","enum":["ar","da","de","el","en","es","fi","fr","he","hi","it","ja","ko","ms","nl","no","pl","pt","ru","sv","sw","tr","zh"]},"python_type":{"type":"Literal[\u0027ar\u0027, \u0027da\u0027, \u0027de\u0027, \u0027el\u0027, \u0027en\u0027, \u0027es\u0027, \u0027fi\u0027, \u0027fr\u0027, \u0027he\u0027, \u0027hi\u0027, \u0027it\u0027, \u0027ja\u0027, \u0027ko\u0027, \u0027ms\u0027, \u0027nl\u0027, \u0027no\u0027, \u0027pl\u0027, \u0027pt\u0027, \u0027ru\u0027, \u0027sv\u0027, \u0027sw\u0027, \u0027tr\u0027, \u0027zh\u0027]","description":""},"component":"Dropdown","example_input":"ar"},{"label":"Reference Audio File (Optional)","parameter_name":"audio_prompt_path_input","parameter_has_default":true,"parameter_default":{"path":"/tmp/gradio/d90d9c90fe3c912a116c78ff661580fc223150978a9a0b4cbb98f94ab19e663b/fr_f1.flac","url":"https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav","size":null,"orig_name":null,"mime_type":null,"is_stream":false,"meta":{"_type":"gradio.FileData"}},"type":{"$defs":{"FileDataMeta":{"properties":{"_type":{"const":"gradio.FileData","title":"Type","type":"string"}},"required":["_type"],"title":"FileDataMeta","type":"object"}},"properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"$ref":"#/$defs/FileDataMeta"}},"required":["path"],"title":"FileData","type":"object","additional_description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"python_type":{"type":"filepath","description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"component":"Audio","example_input":{"path":"https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav","meta":{"_type":"gradio.FileData"},"orig_name":"audio_sample.wav","url":"https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav"}},{"label":"Exaggeration","parameter_name":"exaggeration_input","parameter_has_default":true,"parameter_default":0.5,"type":{"type":"number","description":"numeric value between 0.25 and 2"},"python_type":{"type":"float","description":""},"component":"Slider","example_input":0.25},{"label":"Temperature","parameter_name":"temperature_input","parameter_has_default":true,"parameter_default":0.8,"type":{"type":"number","description":"numeric value between 0.05 and 5"},"python_type":{"type":"float","description":""},"component":"Slider","example_input":0.05},{"label":"Random seed (0 for random)","parameter_name":"seed_num_input","parameter_has_default":true,"parameter_default":0,"type":{"type":"number"},"python_type":{"type":"float","description":""},"component":"Number","example_input":3},{"label":"CFG/Pace","parameter_name":"cfgw_input","parameter_has_default":true,"parameter_default":0.5,"type":{"type":"number","description":"numeric value between 0.2 and 1"},"python_type":{"type":"float","description":""},"component":"Slider","example_input":0.2}],"returns":[{"label":"Output Audio","type":{"$defs":{"FileDataMeta":{"properties":{"_type":{"const":"gradio.FileData","title":"Type","type":"string"}},"required":["_type"],"title":"FileDataMeta","type":"object"}},"properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"$ref":"#/$defs/FileDataMeta"}},"required":["path"],"title":"FileData","type":"object","additional_description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"python_type":{"type":"filepath","description":""},"component":"Audio"}],"show_api":true,"description":""}},"unnamed_endpoints":{}};</script>

		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link
			rel="preconnect"
			href="https://fonts.gstatic.com"
			crossorigin="anonymous"
		/>
		<script
			src="https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/4.3.1/iframeResizer.contentWindow.min.js"
			async
		></script>

		<link rel="manifest" href="/manifest.json" />
		<script type="module" crossorigin src="https://gradio.s3-us-west-2.amazonaws.com/5.44.1/gradio.js"></script>
		
	</head>

	<body
		style="
			width: 100%;
			margin: 0;
			padding: 0;
			display: flex;
			flex-direction: column;
			flex-grow: 1;
		"
	>
		<gradio-app
			control_page_title="true"
			embed="false"
			eager="true"
			style="display: flex; flex-direction: column; flex-grow: 1"
		>
		</gradio-app>
		<script>
			const ce = document.getElementsByTagName("gradio-app");

			if (ce[0]) {
				ce[0].addEventListener("domchange", () => {
					document.body.style.padding = "0";
				});
				document.body.style.padding = "0";
			}
		</script>
	</body>
</html>